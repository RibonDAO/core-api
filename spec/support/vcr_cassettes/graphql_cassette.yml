---
http_interactions:
- request:
    method: post
    uri: https://api.thegraph.com/subgraphs/name/ribondao/subgraphribon
    body:
      encoding: UTF-8
      string: '{"query":"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType
        {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types
        {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args
        {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type
        {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args
        {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields
        {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated:
        true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes
        {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type
        {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType
        {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType
        {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType
        {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType
        {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}","operationName":"IntrospectionQuery"}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Content-Type:
      - application/json
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 27 May 2022 13:46:24 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Ray:
      - 711f324daedca565-GRU
      Access-Control-Allow-Origin:
      - "*"
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Cf-Cache-Status:
      - DYNAMIC
      Access-Control-Allow-Headers:
      - Content-Type, User-Agent
      Access-Control-Allow-Methods:
      - GET, OPTIONS, POST
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Graph-Attestable:
      - 'true'
      Vary:
      - Accept-Encoding
      Server:
      - cloudflare
    body:
      encoding: UTF-8
      string: '{"data":{"__schema":{"queryType":{"name":"Query"},"mutationType":null,"subscriptionType":{"name":"Subscription"},"types":[{"kind":"SCALAR","name":"BigDecimal","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"BigInt","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"BlockChangedFilter","description":null,"fields":null,"inputFields":[{"name":"number_gte","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"Block_height","description":null,"fields":null,"inputFields":[{"name":"hash","description":null,"type":{"kind":"SCALAR","name":"Bytes","ofType":null},"defaultValue":null},{"name":"number","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"number_gte","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Boolean","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Bytes","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DonationBalance","description":null,"fields":[{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Bytes","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"integration","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Bytes","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nonProfit","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Bytes","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalDonated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"BigInt","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DonationBalance_filter","description":null,"fields":null,"inputFields":[{"name":"id","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_not","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_gt","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_lt","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_gte","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_lte","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"id_not_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"user","description":null,"type":{"kind":"SCALAR","name":"Bytes","ofType":null},"defaultValue":null},{"name":"user_not","description":null,"type":{"kind":"SCALAR","name":"Bytes","ofType":null},"defaultValue":null},{"name":"user_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Bytes","ofType":null}}},"defaultValue":null},{"name":"user_not_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Bytes","ofType":null}}},"defaultValue":null},{"name":"user_contains","description":null,"type":{"kind":"SCALAR","name":"Bytes","ofType":null},"defaultValue":null},{"name":"user_not_contains","description":null,"type":{"kind":"SCALAR","name":"Bytes","ofType":null},"defaultValue":null},{"name":"integration","description":null,"type":{"kind":"SCALAR","name":"Bytes","ofType":null},"defaultValue":null},{"name":"integration_not","description":null,"type":{"kind":"SCALAR","name":"Bytes","ofType":null},"defaultValue":null},{"name":"integration_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Bytes","ofType":null}}},"defaultValue":null},{"name":"integration_not_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Bytes","ofType":null}}},"defaultValue":null},{"name":"integration_contains","description":null,"type":{"kind":"SCALAR","name":"Bytes","ofType":null},"defaultValue":null},{"name":"integration_not_contains","description":null,"type":{"kind":"SCALAR","name":"Bytes","ofType":null},"defaultValue":null},{"name":"nonProfit","description":null,"type":{"kind":"SCALAR","name":"Bytes","ofType":null},"defaultValue":null},{"name":"nonProfit_not","description":null,"type":{"kind":"SCALAR","name":"Bytes","ofType":null},"defaultValue":null},{"name":"nonProfit_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Bytes","ofType":null}}},"defaultValue":null},{"name":"nonProfit_not_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Bytes","ofType":null}}},"defaultValue":null},{"name":"nonProfit_contains","description":null,"type":{"kind":"SCALAR","name":"Bytes","ofType":null},"defaultValue":null},{"name":"nonProfit_not_contains","description":null,"type":{"kind":"SCALAR","name":"Bytes","ofType":null},"defaultValue":null},{"name":"totalDonated","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"totalDonated_not","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"totalDonated_gt","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"totalDonated_lt","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"totalDonated_gte","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"totalDonated_lte","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"totalDonated_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"BigInt","ofType":null}}},"defaultValue":null},{"name":"totalDonated_not_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"BigInt","ofType":null}}},"defaultValue":null},{"name":"_change_block","description":"Filter
        for the block changed event.","type":{"kind":"INPUT_OBJECT","name":"BlockChangedFilter","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"DonationBalance_orderBy","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"id","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"user","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"integration","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"nonProfit","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"totalDonated","description":null,"isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"SCALAR","name":"Float","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"ID","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Int","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Integration","description":null,"fields":[{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"balance","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"BigInt","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"Integration_filter","description":null,"fields":null,"inputFields":[{"name":"id","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_not","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_gt","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_lt","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_gte","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_lte","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"id_not_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"balance","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"balance_not","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"balance_gt","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"balance_lt","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"balance_gte","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"balance_lte","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"balance_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"BigInt","ofType":null}}},"defaultValue":null},{"name":"balance_not_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"BigInt","ofType":null}}},"defaultValue":null},{"name":"_change_block","description":"Filter
        for the block changed event.","type":{"kind":"INPUT_OBJECT","name":"BlockChangedFilter","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"Integration_orderBy","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"id","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"balance","description":null,"isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"NonProfit","description":null,"fields":[{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isNonProfitOnWhitelist","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"NonProfit_filter","description":null,"fields":null,"inputFields":[{"name":"id","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_not","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_gt","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_lt","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_gte","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_lte","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"id_not_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"isNonProfitOnWhitelist","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"isNonProfitOnWhitelist_not","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"isNonProfitOnWhitelist_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}}},"defaultValue":null},{"name":"isNonProfitOnWhitelist_not_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}}},"defaultValue":null},{"name":"_change_block","description":"Filter
        for the block changed event.","type":{"kind":"INPUT_OBJECT","name":"BlockChangedFilter","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"NonProfit_orderBy","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"id","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"isNonProfitOnWhitelist","description":null,"isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"OrderDirection","description":"Defines
        the order direction, either ascending or descending","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"asc","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"desc","description":null,"isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"Promoter","description":null,"fields":[{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalDonated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"BigInt","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PromoterDonation","description":null,"fields":[{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Bytes","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"amountDonated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"BigInt","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"timestamp","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"BigInt","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"PromoterDonation_filter","description":null,"fields":null,"inputFields":[{"name":"id","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_not","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_gt","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_lt","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_gte","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_lte","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"id_not_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"user","description":null,"type":{"kind":"SCALAR","name":"Bytes","ofType":null},"defaultValue":null},{"name":"user_not","description":null,"type":{"kind":"SCALAR","name":"Bytes","ofType":null},"defaultValue":null},{"name":"user_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Bytes","ofType":null}}},"defaultValue":null},{"name":"user_not_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Bytes","ofType":null}}},"defaultValue":null},{"name":"user_contains","description":null,"type":{"kind":"SCALAR","name":"Bytes","ofType":null},"defaultValue":null},{"name":"user_not_contains","description":null,"type":{"kind":"SCALAR","name":"Bytes","ofType":null},"defaultValue":null},{"name":"amountDonated","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"amountDonated_not","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"amountDonated_gt","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"amountDonated_lt","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"amountDonated_gte","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"amountDonated_lte","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"amountDonated_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"BigInt","ofType":null}}},"defaultValue":null},{"name":"amountDonated_not_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"BigInt","ofType":null}}},"defaultValue":null},{"name":"timestamp","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"timestamp_not","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"timestamp_gt","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"timestamp_lt","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"timestamp_gte","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"timestamp_lte","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"timestamp_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"BigInt","ofType":null}}},"defaultValue":null},{"name":"timestamp_not_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"BigInt","ofType":null}}},"defaultValue":null},{"name":"_change_block","description":"Filter
        for the block changed event.","type":{"kind":"INPUT_OBJECT","name":"BlockChangedFilter","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"PromoterDonation_orderBy","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"id","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"user","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"amountDonated","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"timestamp","description":null,"isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"Promoter_filter","description":null,"fields":null,"inputFields":[{"name":"id","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_not","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_gt","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_lt","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_gte","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_lte","description":null,"type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"id_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"id_not_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"totalDonated","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"totalDonated_not","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"totalDonated_gt","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"totalDonated_lt","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"totalDonated_gte","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"totalDonated_lte","description":null,"type":{"kind":"SCALAR","name":"BigInt","ofType":null},"defaultValue":null},{"name":"totalDonated_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"BigInt","ofType":null}}},"defaultValue":null},{"name":"totalDonated_not_in","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"BigInt","ofType":null}}},"defaultValue":null},{"name":"_change_block","description":"Filter
        for the block changed event.","type":{"kind":"INPUT_OBJECT","name":"BlockChangedFilter","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"Promoter_orderBy","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"id","description":null,"isDeprecated":false,"deprecationReason":null},{"name":"totalDonated","description":null,"isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"Query","description":null,"fields":[{"name":"nonProfit","description":null,"args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"block","description":"The
        block at which the query should be executed. Can either be a `{ hash: Bytes
        }` value containing a block hash, a `{ number: Int }` containing the block
        number, or a `{ number_gte: Int }` containing the minimum block number. In
        the case of `number_gte`, the query will be executed on the latest block only
        if the subgraph has progressed to or past the minimum block number. Defaults
        to the latest block when omitted.","type":{"kind":"INPUT_OBJECT","name":"Block_height","ofType":null},"defaultValue":null},{"name":"subgraphError","description":"Set
        to `allow` to receive data even if the subgraph has skipped over errors while
        syncing.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"_SubgraphErrorPolicy_","ofType":null}},"defaultValue":"deny"}],"type":{"kind":"OBJECT","name":"NonProfit","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"nonProfits","description":null,"args":[{"name":"skip","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"0"},{"name":"first","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"100"},{"name":"orderBy","description":null,"type":{"kind":"ENUM","name":"NonProfit_orderBy","ofType":null},"defaultValue":null},{"name":"orderDirection","description":null,"type":{"kind":"ENUM","name":"OrderDirection","ofType":null},"defaultValue":null},{"name":"where","description":null,"type":{"kind":"INPUT_OBJECT","name":"NonProfit_filter","ofType":null},"defaultValue":null},{"name":"block","description":"The
        block at which the query should be executed. Can either be a `{ hash: Bytes
        }` value containing a block hash, a `{ number: Int }` containing the block
        number, or a `{ number_gte: Int }` containing the minimum block number. In
        the case of `number_gte`, the query will be executed on the latest block only
        if the subgraph has progressed to or past the minimum block number. Defaults
        to the latest block when omitted.","type":{"kind":"INPUT_OBJECT","name":"Block_height","ofType":null},"defaultValue":null},{"name":"subgraphError","description":"Set
        to `allow` to receive data even if the subgraph has skipped over errors while
        syncing.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"_SubgraphErrorPolicy_","ofType":null}},"defaultValue":"deny"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"NonProfit","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"integration","description":null,"args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"block","description":"The
        block at which the query should be executed. Can either be a `{ hash: Bytes
        }` value containing a block hash, a `{ number: Int }` containing the block
        number, or a `{ number_gte: Int }` containing the minimum block number. In
        the case of `number_gte`, the query will be executed on the latest block only
        if the subgraph has progressed to or past the minimum block number. Defaults
        to the latest block when omitted.","type":{"kind":"INPUT_OBJECT","name":"Block_height","ofType":null},"defaultValue":null},{"name":"subgraphError","description":"Set
        to `allow` to receive data even if the subgraph has skipped over errors while
        syncing.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"_SubgraphErrorPolicy_","ofType":null}},"defaultValue":"deny"}],"type":{"kind":"OBJECT","name":"Integration","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"integrations","description":null,"args":[{"name":"skip","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"0"},{"name":"first","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"100"},{"name":"orderBy","description":null,"type":{"kind":"ENUM","name":"Integration_orderBy","ofType":null},"defaultValue":null},{"name":"orderDirection","description":null,"type":{"kind":"ENUM","name":"OrderDirection","ofType":null},"defaultValue":null},{"name":"where","description":null,"type":{"kind":"INPUT_OBJECT","name":"Integration_filter","ofType":null},"defaultValue":null},{"name":"block","description":"The
        block at which the query should be executed. Can either be a `{ hash: Bytes
        }` value containing a block hash, a `{ number: Int }` containing the block
        number, or a `{ number_gte: Int }` containing the minimum block number. In
        the case of `number_gte`, the query will be executed on the latest block only
        if the subgraph has progressed to or past the minimum block number. Defaults
        to the latest block when omitted.","type":{"kind":"INPUT_OBJECT","name":"Block_height","ofType":null},"defaultValue":null},{"name":"subgraphError","description":"Set
        to `allow` to receive data even if the subgraph has skipped over errors while
        syncing.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"_SubgraphErrorPolicy_","ofType":null}},"defaultValue":"deny"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Integration","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"promoter","description":null,"args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"block","description":"The
        block at which the query should be executed. Can either be a `{ hash: Bytes
        }` value containing a block hash, a `{ number: Int }` containing the block
        number, or a `{ number_gte: Int }` containing the minimum block number. In
        the case of `number_gte`, the query will be executed on the latest block only
        if the subgraph has progressed to or past the minimum block number. Defaults
        to the latest block when omitted.","type":{"kind":"INPUT_OBJECT","name":"Block_height","ofType":null},"defaultValue":null},{"name":"subgraphError","description":"Set
        to `allow` to receive data even if the subgraph has skipped over errors while
        syncing.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"_SubgraphErrorPolicy_","ofType":null}},"defaultValue":"deny"}],"type":{"kind":"OBJECT","name":"Promoter","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"promoters","description":null,"args":[{"name":"skip","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"0"},{"name":"first","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"100"},{"name":"orderBy","description":null,"type":{"kind":"ENUM","name":"Promoter_orderBy","ofType":null},"defaultValue":null},{"name":"orderDirection","description":null,"type":{"kind":"ENUM","name":"OrderDirection","ofType":null},"defaultValue":null},{"name":"where","description":null,"type":{"kind":"INPUT_OBJECT","name":"Promoter_filter","ofType":null},"defaultValue":null},{"name":"block","description":"The
        block at which the query should be executed. Can either be a `{ hash: Bytes
        }` value containing a block hash, a `{ number: Int }` containing the block
        number, or a `{ number_gte: Int }` containing the minimum block number. In
        the case of `number_gte`, the query will be executed on the latest block only
        if the subgraph has progressed to or past the minimum block number. Defaults
        to the latest block when omitted.","type":{"kind":"INPUT_OBJECT","name":"Block_height","ofType":null},"defaultValue":null},{"name":"subgraphError","description":"Set
        to `allow` to receive data even if the subgraph has skipped over errors while
        syncing.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"_SubgraphErrorPolicy_","ofType":null}},"defaultValue":"deny"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Promoter","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"donationBalance","description":null,"args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"block","description":"The
        block at which the query should be executed. Can either be a `{ hash: Bytes
        }` value containing a block hash, a `{ number: Int }` containing the block
        number, or a `{ number_gte: Int }` containing the minimum block number. In
        the case of `number_gte`, the query will be executed on the latest block only
        if the subgraph has progressed to or past the minimum block number. Defaults
        to the latest block when omitted.","type":{"kind":"INPUT_OBJECT","name":"Block_height","ofType":null},"defaultValue":null},{"name":"subgraphError","description":"Set
        to `allow` to receive data even if the subgraph has skipped over errors while
        syncing.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"_SubgraphErrorPolicy_","ofType":null}},"defaultValue":"deny"}],"type":{"kind":"OBJECT","name":"DonationBalance","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"donationBalances","description":null,"args":[{"name":"skip","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"0"},{"name":"first","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"100"},{"name":"orderBy","description":null,"type":{"kind":"ENUM","name":"DonationBalance_orderBy","ofType":null},"defaultValue":null},{"name":"orderDirection","description":null,"type":{"kind":"ENUM","name":"OrderDirection","ofType":null},"defaultValue":null},{"name":"where","description":null,"type":{"kind":"INPUT_OBJECT","name":"DonationBalance_filter","ofType":null},"defaultValue":null},{"name":"block","description":"The
        block at which the query should be executed. Can either be a `{ hash: Bytes
        }` value containing a block hash, a `{ number: Int }` containing the block
        number, or a `{ number_gte: Int }` containing the minimum block number. In
        the case of `number_gte`, the query will be executed on the latest block only
        if the subgraph has progressed to or past the minimum block number. Defaults
        to the latest block when omitted.","type":{"kind":"INPUT_OBJECT","name":"Block_height","ofType":null},"defaultValue":null},{"name":"subgraphError","description":"Set
        to `allow` to receive data even if the subgraph has skipped over errors while
        syncing.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"_SubgraphErrorPolicy_","ofType":null}},"defaultValue":"deny"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"DonationBalance","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"promoterDonation","description":null,"args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"block","description":"The
        block at which the query should be executed. Can either be a `{ hash: Bytes
        }` value containing a block hash, a `{ number: Int }` containing the block
        number, or a `{ number_gte: Int }` containing the minimum block number. In
        the case of `number_gte`, the query will be executed on the latest block only
        if the subgraph has progressed to or past the minimum block number. Defaults
        to the latest block when omitted.","type":{"kind":"INPUT_OBJECT","name":"Block_height","ofType":null},"defaultValue":null},{"name":"subgraphError","description":"Set
        to `allow` to receive data even if the subgraph has skipped over errors while
        syncing.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"_SubgraphErrorPolicy_","ofType":null}},"defaultValue":"deny"}],"type":{"kind":"OBJECT","name":"PromoterDonation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"promoterDonations","description":null,"args":[{"name":"skip","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"0"},{"name":"first","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"100"},{"name":"orderBy","description":null,"type":{"kind":"ENUM","name":"PromoterDonation_orderBy","ofType":null},"defaultValue":null},{"name":"orderDirection","description":null,"type":{"kind":"ENUM","name":"OrderDirection","ofType":null},"defaultValue":null},{"name":"where","description":null,"type":{"kind":"INPUT_OBJECT","name":"PromoterDonation_filter","ofType":null},"defaultValue":null},{"name":"block","description":"The
        block at which the query should be executed. Can either be a `{ hash: Bytes
        }` value containing a block hash, a `{ number: Int }` containing the block
        number, or a `{ number_gte: Int }` containing the minimum block number. In
        the case of `number_gte`, the query will be executed on the latest block only
        if the subgraph has progressed to or past the minimum block number. Defaults
        to the latest block when omitted.","type":{"kind":"INPUT_OBJECT","name":"Block_height","ofType":null},"defaultValue":null},{"name":"subgraphError","description":"Set
        to `allow` to receive data even if the subgraph has skipped over errors while
        syncing.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"_SubgraphErrorPolicy_","ofType":null}},"defaultValue":"deny"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PromoterDonation","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"_meta","description":"Access
        to subgraph metadata","args":[{"name":"block","description":null,"type":{"kind":"INPUT_OBJECT","name":"Block_height","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"_Meta_","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"String","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Subscription","description":null,"fields":[{"name":"nonProfit","description":null,"args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"block","description":"The
        block at which the query should be executed. Can either be a `{ hash: Bytes
        }` value containing a block hash, a `{ number: Int }` containing the block
        number, or a `{ number_gte: Int }` containing the minimum block number. In
        the case of `number_gte`, the query will be executed on the latest block only
        if the subgraph has progressed to or past the minimum block number. Defaults
        to the latest block when omitted.","type":{"kind":"INPUT_OBJECT","name":"Block_height","ofType":null},"defaultValue":null},{"name":"subgraphError","description":"Set
        to `allow` to receive data even if the subgraph has skipped over errors while
        syncing.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"_SubgraphErrorPolicy_","ofType":null}},"defaultValue":"deny"}],"type":{"kind":"OBJECT","name":"NonProfit","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"nonProfits","description":null,"args":[{"name":"skip","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"0"},{"name":"first","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"100"},{"name":"orderBy","description":null,"type":{"kind":"ENUM","name":"NonProfit_orderBy","ofType":null},"defaultValue":null},{"name":"orderDirection","description":null,"type":{"kind":"ENUM","name":"OrderDirection","ofType":null},"defaultValue":null},{"name":"where","description":null,"type":{"kind":"INPUT_OBJECT","name":"NonProfit_filter","ofType":null},"defaultValue":null},{"name":"block","description":"The
        block at which the query should be executed. Can either be a `{ hash: Bytes
        }` value containing a block hash, a `{ number: Int }` containing the block
        number, or a `{ number_gte: Int }` containing the minimum block number. In
        the case of `number_gte`, the query will be executed on the latest block only
        if the subgraph has progressed to or past the minimum block number. Defaults
        to the latest block when omitted.","type":{"kind":"INPUT_OBJECT","name":"Block_height","ofType":null},"defaultValue":null},{"name":"subgraphError","description":"Set
        to `allow` to receive data even if the subgraph has skipped over errors while
        syncing.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"_SubgraphErrorPolicy_","ofType":null}},"defaultValue":"deny"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"NonProfit","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"integration","description":null,"args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"block","description":"The
        block at which the query should be executed. Can either be a `{ hash: Bytes
        }` value containing a block hash, a `{ number: Int }` containing the block
        number, or a `{ number_gte: Int }` containing the minimum block number. In
        the case of `number_gte`, the query will be executed on the latest block only
        if the subgraph has progressed to or past the minimum block number. Defaults
        to the latest block when omitted.","type":{"kind":"INPUT_OBJECT","name":"Block_height","ofType":null},"defaultValue":null},{"name":"subgraphError","description":"Set
        to `allow` to receive data even if the subgraph has skipped over errors while
        syncing.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"_SubgraphErrorPolicy_","ofType":null}},"defaultValue":"deny"}],"type":{"kind":"OBJECT","name":"Integration","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"integrations","description":null,"args":[{"name":"skip","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"0"},{"name":"first","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"100"},{"name":"orderBy","description":null,"type":{"kind":"ENUM","name":"Integration_orderBy","ofType":null},"defaultValue":null},{"name":"orderDirection","description":null,"type":{"kind":"ENUM","name":"OrderDirection","ofType":null},"defaultValue":null},{"name":"where","description":null,"type":{"kind":"INPUT_OBJECT","name":"Integration_filter","ofType":null},"defaultValue":null},{"name":"block","description":"The
        block at which the query should be executed. Can either be a `{ hash: Bytes
        }` value containing a block hash, a `{ number: Int }` containing the block
        number, or a `{ number_gte: Int }` containing the minimum block number. In
        the case of `number_gte`, the query will be executed on the latest block only
        if the subgraph has progressed to or past the minimum block number. Defaults
        to the latest block when omitted.","type":{"kind":"INPUT_OBJECT","name":"Block_height","ofType":null},"defaultValue":null},{"name":"subgraphError","description":"Set
        to `allow` to receive data even if the subgraph has skipped over errors while
        syncing.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"_SubgraphErrorPolicy_","ofType":null}},"defaultValue":"deny"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Integration","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"promoter","description":null,"args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"block","description":"The
        block at which the query should be executed. Can either be a `{ hash: Bytes
        }` value containing a block hash, a `{ number: Int }` containing the block
        number, or a `{ number_gte: Int }` containing the minimum block number. In
        the case of `number_gte`, the query will be executed on the latest block only
        if the subgraph has progressed to or past the minimum block number. Defaults
        to the latest block when omitted.","type":{"kind":"INPUT_OBJECT","name":"Block_height","ofType":null},"defaultValue":null},{"name":"subgraphError","description":"Set
        to `allow` to receive data even if the subgraph has skipped over errors while
        syncing.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"_SubgraphErrorPolicy_","ofType":null}},"defaultValue":"deny"}],"type":{"kind":"OBJECT","name":"Promoter","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"promoters","description":null,"args":[{"name":"skip","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"0"},{"name":"first","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"100"},{"name":"orderBy","description":null,"type":{"kind":"ENUM","name":"Promoter_orderBy","ofType":null},"defaultValue":null},{"name":"orderDirection","description":null,"type":{"kind":"ENUM","name":"OrderDirection","ofType":null},"defaultValue":null},{"name":"where","description":null,"type":{"kind":"INPUT_OBJECT","name":"Promoter_filter","ofType":null},"defaultValue":null},{"name":"block","description":"The
        block at which the query should be executed. Can either be a `{ hash: Bytes
        }` value containing a block hash, a `{ number: Int }` containing the block
        number, or a `{ number_gte: Int }` containing the minimum block number. In
        the case of `number_gte`, the query will be executed on the latest block only
        if the subgraph has progressed to or past the minimum block number. Defaults
        to the latest block when omitted.","type":{"kind":"INPUT_OBJECT","name":"Block_height","ofType":null},"defaultValue":null},{"name":"subgraphError","description":"Set
        to `allow` to receive data even if the subgraph has skipped over errors while
        syncing.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"_SubgraphErrorPolicy_","ofType":null}},"defaultValue":"deny"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Promoter","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"donationBalance","description":null,"args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"block","description":"The
        block at which the query should be executed. Can either be a `{ hash: Bytes
        }` value containing a block hash, a `{ number: Int }` containing the block
        number, or a `{ number_gte: Int }` containing the minimum block number. In
        the case of `number_gte`, the query will be executed on the latest block only
        if the subgraph has progressed to or past the minimum block number. Defaults
        to the latest block when omitted.","type":{"kind":"INPUT_OBJECT","name":"Block_height","ofType":null},"defaultValue":null},{"name":"subgraphError","description":"Set
        to `allow` to receive data even if the subgraph has skipped over errors while
        syncing.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"_SubgraphErrorPolicy_","ofType":null}},"defaultValue":"deny"}],"type":{"kind":"OBJECT","name":"DonationBalance","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"donationBalances","description":null,"args":[{"name":"skip","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"0"},{"name":"first","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"100"},{"name":"orderBy","description":null,"type":{"kind":"ENUM","name":"DonationBalance_orderBy","ofType":null},"defaultValue":null},{"name":"orderDirection","description":null,"type":{"kind":"ENUM","name":"OrderDirection","ofType":null},"defaultValue":null},{"name":"where","description":null,"type":{"kind":"INPUT_OBJECT","name":"DonationBalance_filter","ofType":null},"defaultValue":null},{"name":"block","description":"The
        block at which the query should be executed. Can either be a `{ hash: Bytes
        }` value containing a block hash, a `{ number: Int }` containing the block
        number, or a `{ number_gte: Int }` containing the minimum block number. In
        the case of `number_gte`, the query will be executed on the latest block only
        if the subgraph has progressed to or past the minimum block number. Defaults
        to the latest block when omitted.","type":{"kind":"INPUT_OBJECT","name":"Block_height","ofType":null},"defaultValue":null},{"name":"subgraphError","description":"Set
        to `allow` to receive data even if the subgraph has skipped over errors while
        syncing.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"_SubgraphErrorPolicy_","ofType":null}},"defaultValue":"deny"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"DonationBalance","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"promoterDonation","description":null,"args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"block","description":"The
        block at which the query should be executed. Can either be a `{ hash: Bytes
        }` value containing a block hash, a `{ number: Int }` containing the block
        number, or a `{ number_gte: Int }` containing the minimum block number. In
        the case of `number_gte`, the query will be executed on the latest block only
        if the subgraph has progressed to or past the minimum block number. Defaults
        to the latest block when omitted.","type":{"kind":"INPUT_OBJECT","name":"Block_height","ofType":null},"defaultValue":null},{"name":"subgraphError","description":"Set
        to `allow` to receive data even if the subgraph has skipped over errors while
        syncing.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"_SubgraphErrorPolicy_","ofType":null}},"defaultValue":"deny"}],"type":{"kind":"OBJECT","name":"PromoterDonation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"promoterDonations","description":null,"args":[{"name":"skip","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"0"},{"name":"first","description":null,"type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"100"},{"name":"orderBy","description":null,"type":{"kind":"ENUM","name":"PromoterDonation_orderBy","ofType":null},"defaultValue":null},{"name":"orderDirection","description":null,"type":{"kind":"ENUM","name":"OrderDirection","ofType":null},"defaultValue":null},{"name":"where","description":null,"type":{"kind":"INPUT_OBJECT","name":"PromoterDonation_filter","ofType":null},"defaultValue":null},{"name":"block","description":"The
        block at which the query should be executed. Can either be a `{ hash: Bytes
        }` value containing a block hash, a `{ number: Int }` containing the block
        number, or a `{ number_gte: Int }` containing the minimum block number. In
        the case of `number_gte`, the query will be executed on the latest block only
        if the subgraph has progressed to or past the minimum block number. Defaults
        to the latest block when omitted.","type":{"kind":"INPUT_OBJECT","name":"Block_height","ofType":null},"defaultValue":null},{"name":"subgraphError","description":"Set
        to `allow` to receive data even if the subgraph has skipped over errors while
        syncing.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"_SubgraphErrorPolicy_","ofType":null}},"defaultValue":"deny"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PromoterDonation","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"_meta","description":"Access
        to subgraph metadata","args":[{"name":"block","description":null,"type":{"kind":"INPUT_OBJECT","name":"Block_height","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"_Meta_","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"_Block_","description":null,"fields":[{"name":"hash","description":"The
        hash of the block","args":[],"type":{"kind":"SCALAR","name":"Bytes","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"number","description":"The
        block number","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"_Meta_","description":"The
        type for the top-level _meta field","fields":[{"name":"block","description":"Information
        about a specific subgraph block. The hash of the block\nwill be null if the
        _meta field has a block constraint that asks for\na block number. It will
        be filled if the _meta field has no block constraint\nand therefore asks for
        the latest  block\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"_Block_","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deployment","description":"The
        deployment ID","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hasIndexingErrors","description":"If
        `true`, the subgraph encountered indexing errors at some past block","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"_SubgraphErrorPolicy_","description":null,"fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"allow","description":"Data
        will be returned even if the subgraph has indexing errors","isDeprecated":false,"deprecationReason":null},{"name":"deny","description":"If
        the subgraph has indexing errors, data will be omitted. The default.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null}],"directives":[{"name":"skip","description":null,"locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"include","description":null,"locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"entity","description":"Marks
        the GraphQL type as indexable entity.  Each type that should be an entity
        is required to be annotated with this directive.","locations":["OBJECT"],"args":[]},{"name":"subgraphId","description":"Defined
        a Subgraph ID for an object type","locations":["OBJECT"],"args":[{"name":"id","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}]},{"name":"derivedFrom","description":"creates
        a virtual field on the entity that may be queried but cannot be set manually
        through the mappings API.","locations":["FIELD_DEFINITION"],"args":[{"name":"field","description":null,"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}]}]}}}'
  recorded_at: Fri, 27 May 2022 13:46:24 GMT
recorded_with: VCR 6.1.0
